<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


	<!-- 建立JNDI数据源 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/DB</value>
		</property>
	</bean>
	
	<!-- 配置lob类型 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
 		lazy-init="true" />
	
	<!-- 把数据源注入给SessionFactory工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		
		<!-- 扫描实体类 -->
		<property name="packagesToScan">
			<list>
				<value>com.yd.entity.admin</value>
			</list>
		</property>
		
		<!-- 配置hibernate相关属性 -->
		<property name="hibernateProperties">
			<props> 
				<prop key="hibernate.dialect">
					${c3p0.dialect}
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.format_sql">true</prop> 
				 <!--代表使用Hibernate的二级缓存-->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
			</props>
		</property>
	</bean>
	<bean class="com.yd.util.SpringUtil" lazy-init="false" ></bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/com/yd/dao/mybatis/mybatis.cfg.xml"/>
		<property name="mapperLocations" value="classpath:/com/yd/dao/mybatis/mapper/*.xml" />
	</bean>
	
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务拦截 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            <tx:method name="use*" propagation="REQUIRED"/>
            <tx:method name="generate*" propagation="REQUIRED"/>
            <tx:method name="change*" propagation="REQUIRED"/>
            <tx:method name="synchro*" propagation="REQUIRED"/>
            <tx:method name="lockup*" propagation="REQUIRED"/>
            <tx:method name="upload*" propagation="REQUIRED"/>
            <tx:method name="ignore*" propagation="REQUIRED"/>
            <tx:method name="issued*" propagation="REQUIRED"/>
            <tx:method name="feedback*" propagation="REQUIRED"/>
            <tx:method name="approve*" propagation="REQUIRED"/>
            <tx:method name="submit*" propagation="REQUIRED"/>
            <tx:method name="cancel*" propagation="REQUIRED"/>
            <tx:method name="auto*" propagation="REQUIRED"/>
            <tx:method name="batch*" propagation="REQUIRED"/>
            <tx:method name="issue*" propagation="REQUIRED"/>
            <tx:method name="send*" propagation="REQUIRED" />
            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true"  />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txAdvicePointcut"
			expression="(execution(* com.yd.service.*.*.*(..)))
				or (execution(* com.yd.service.*.*(..)))
			" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txAdvicePointcut" />
	</aop:config>
	
	<!-- <aop:aspectj-autoproxy/>
    <bean id="logAspect" class="com.yd.common.logaop.LogAspect"/>    
     <aop:config>  
        <aop:aspect ref="logAspect">  
            <aop:pointcut id="logPointCut" expression="
            	   (execution(* com.yd.service.*.*Impl.add*(..)))
            	or (execution(* com.yd.service.*.*Impl.update*(..)))
            	or (execution(* com.yd.service.*.*Impl.delete*(..)))
            	or (execution(* com.yd.service.*.*Impl.lockup*(..)))
            "/>  
            <aop:after pointcut-ref="logPointCut" method="doSystemLog"/>  
        </aop:aspect>  
    </aop:config>   -->
    
	<!-- 配置自动扫描 -->
	<context:component-scan base-package="com.yd.*"  annotation-config="true"/>
	
</beans>